---
openapi: 3.0.3
info:
  title: API V1
  version: v1
paths:
  "/schools/{school_id}/classes":
    parameters:
    - name: school_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Список классов школы
      tags:
      - classes
      responses:
        '200':
          description: Список классов
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Class"
  "/schools/{school_id}/classes/{class_id}/students":
    parameters:
    - name: school_id
      in: path
      required: true
      schema:
        type: integer
    - name: class_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Список студентов
      tags:
      - students
      - classes
      responses:
        '200':
          description: Список студентов
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Student"
  "/students":
    post:
      summary: Регистрация нового студента
      tags:
      - students
      parameters: []
      responses:
        '201':
          description: Successful operation
          headers:
            X-Auth-Token:
              schema:
                type: string
              description: Токен для последующей авторизации
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Student"
  "/students/{user_id}":
    delete:
      summary: Удалить студента
      tags:
      - students
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        schema:
          type: integer
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Некорректный id студента
        '401':
          description: Unauthorized
servers:
- url: http://localhost:3000/api/v1
security:
- bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Ожидается токен, выдаваемый при регистрации студента
      bearerFormat: SHA256
  parameters:
    school_id:
      name: school_id
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 1
    class_id:
      name: class_id
      in: path
      required: true
      description: id класса
      schema:
        type: integer
        format: int32
        example: 1
  schemas:
    Student:
      type: object
      required:
      - id
      - first_name
      - last_name
      - surname
      - class_id
      - school_id
      properties:
        id:
          type: integer
          format: int64
          example: 10
          readOnly: true
        first_name:
          type: string
          example: Вячеслав
        last_name:
          type: string
          example: Абдурахмангаджиевич
        surname:
          type: string
          example: Мухобойников-Сыркин
        class_id:
          type: integer
          format: int32
          example: 1
        school_id:
          type: integer
          format: int32
          example: 1
    Class:
      type: object
      required:
      - id
      - number
      - letter
      - students_count
      properties:
        id:
          type: integer
          format: int32
          example: 10
          readOnly: true
        number:
          type: integer
          format: int32
          example: 1
          description: Цифра класса
        letter:
          type: string
          example: Б
          description: Буква класса
        students_count:
          type: integer
          format: int32
          example: 32
          readOnly: true
          description: Количество учеников в классе
